Tasks:
  Foods
    Index route
      create a index route [√]
      create a index controller action [√]
      create an ecto model [√]
      display ecto models data in json response [√]
    Show route
      create a show route [√]
      create a show controller action [√]
      display ecto model data in json response [√]
    Create route
      create a create route [√]
      create a create controller action [√]
      display appropriate status in json response [√]
    Update route
      create an update route [√]
      create an update controller action [√]
      display appropriate status in json response [√]
    Destroy route
      create a destroy route [√]
      create a destroy controller action [√]
      display appropriate status in json response [√]

  Days
    Create an ecto model with an association [√]
    Enforce uniqueness constraint on day's date [√]
    Show route [√]
      Preload foods in Day controller [√]
      Show associated foods [√]

    Update route [ ]
      Standard update procedure [√]
      Add the ability to save associated foods [√]
      Add notion of "count" [ ]

    Create route [ ]
      Appropriately handle empty params [ ]
      Handle saving nested/associated foods [ ]

  Unit
    Consider pros and cons of using an enum vs a database table [ ]

  DayFoods
    Create a join table for the many-to-many relationship between foods and days [ ]
      create the model [√]
      create the migration [√]
      update the food and day schemas [√]



Nice to have:
  Figure out what :scrub_params does [√]
    - Answer: prevents sql injection (to an extent); also ensures a params root key
  Figure out how to load files in (i.e., ecto_enum modules) [√]
    - Answer: must use `.ex` file extension instead of `.exs`
